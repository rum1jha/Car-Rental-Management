--------------------------------------------------------
--  File created - Friday-December-03-2021   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Function PROCESS_CUSTOMER
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "ADMIN"."PROCESS_CUSTOMER" 
(
  vFIRST_NAME IN VARCHAR2, 
  vLAST_NAME IN VARCHAR2, 
  vEMAIL_ID IN VARCHAR2,
  vCONTACT IN NUMBER, 
  vLICENSE_NUMBER IN VARCHAR2,
  vPASSPORT_NUMBER IN VARCHAR2, 
  vCUSTOMER_TYPE IN VARCHAR2, 
  vDATE_OF_BIRTH IN DATE
) RETURN VARCHAR2 AS 

    DB_EMAIL_ID CUSTOMERS.EMAIL_ID%type;
    DB_CONTACT CUSTOMERS.CONTACT%type;
    DB_LICENSE_NUMBER CUSTOMERS.LICENSE_NUMBER%type;
    DB_PASSPORT_NUMBER CUSTOMERS.PASSPORT_NUMBER%type;
    
    INVALID_NAME EXCEPTION;
    INVALID_EMAIL EXCEPTION;
    INVALID_CONTACT EXCEPTION;
    INVALID_LICENSE_NUMBER EXCEPTION;
    INVALID_PASSPORT_NUMBER EXCEPTION;
    INVALID_CUSTOMER_TYPE EXCEPTION;
    INVALID_DATE_OF_BIRTH EXCEPTION;
BEGIN
    
    -- check data is null, empty and appropriate
    if vFIRST_NAME is NULL or REGEXP_LIKE(TRIM(vFIRST_NAME) , '^[0-9]*$') or LENGTH(TRIM(vFIRST_NAME)) is NULL or
    vLAST_NAME is NULL or REGEXP_LIKE(TRIM(vLAST_NAME) , '^[0-9]*$') or LENGTH(TRIM(vLAST_NAME)) is NULL then
        raise INVALID_NAME;
    end if;
    
    if vEMAIL_ID is NULL or LENGTH(TRIM(vEMAIL_ID)) is NULL or NOT (TRIM(vEMAIL_ID)) LIKE '%@_%._%' then
        raise INVALID_EMAIL;
    end if;
    
    if vCONTACT is NULL or  LENGTH(vCONTACT) != 10  then
        raise INVALID_CONTACT;
    end if;
    
    if vLICENSE_NUMBER is NULL or LENGTH(TRIM(vLICENSE_NUMBER)) is NULL then
        raise INVALID_LICENSE_NUMBER;
    end if;
    
    if vPASSPORT_NUMBER is NULL or LENGTH(TRIM(vPASSPORT_NUMBER)) is NULL then
        raise INVALID_PASSPORT_NUMBER;
    end if;
       
    if vCUSTOMER_TYPE is NULL or LENGTH(TRIM(vCUSTOMER_TYPE)) is NULL or vCUSTOMER_TYPE not in ('STUDENT','EMPLOYEE','OTHERS') then
        raise INVALID_CUSTOMER_TYPE;
    end if;
    
    if vDATE_OF_BIRTH is NULL or ((sysdate - vDATE_OF_BIRTH)/365) < 18  then
        raise INVALID_DATE_OF_BIRTH;
    end if;
    
    -- check if customer data already exists
    begin
        select EMAIL_ID into DB_EMAIL_ID from CUSTOMERS where EMAIL_ID = vEMAIL_ID;
        if DB_EMAIL_ID IS NOT NULL then
            raise INVALID_EMAIL;
        end if;
    exception
        when NO_DATA_FOUND then
             NULL;
        when INVALID_EMAIL then
            dbms_output.put_line('Duplicate Email Address!!!');
            RETURN 'NO';
    end;
    
    begin
        select CONTACT into DB_CONTACT from CUSTOMERS where CONTACT = vCONTACT;
        if DB_CONTACT IS NOT NULL then
            raise INVALID_CONTACT;
        end if;
    exception
        when NO_DATA_FOUND then
             NULL;
        when INVALID_CONTACT then
            dbms_output.put_line('Duplicate Contact!!!');
            RETURN 'NO';
    end;
    
    begin
        select LICENSE_NUMBER into DB_LICENSE_NUMBER from CUSTOMERS where LICENSE_NUMBER = vLICENSE_NUMBER;
        if DB_LICENSE_NUMBER IS NOT NULL then
            raise INVALID_LICENSE_NUMBER;
        end if;
    exception
        when NO_DATA_FOUND then
             NULL;
        when INVALID_LICENSE_NUMBER then
            dbms_output.put_line('Duplicate License Number!!!');
            RETURN 'NO';
    end;
    
    begin
        select PASSPORT_NUMBER into DB_PASSPORT_NUMBER from CUSTOMERS where PASSPORT_NUMBER = vPASSPORT_NUMBER;
        if DB_PASSPORT_NUMBER IS NOT NULL then
            raise INVALID_PASSPORT_NUMBER;
        end if;
    exception
        when NO_DATA_FOUND then
             NULL;
        when INVALID_PASSPORT_NUMBER then
            dbms_output.put_line('Duplicate Passport Number!!!');
            RETURN 'NO';
    end;
    
    RETURN 'YES';
    
EXCEPTION
    when INVALID_NAME then
        dbms_output.put_line('Invalid Name !!!');
        RETURN 'NO';
    when INVALID_EMAIL then
        dbms_output.put_line('Invalid Email !!!');
        RETURN 'NO';
    when INVALID_CONTACT then
        dbms_output.put_line('Invalid Contact !!!');
        RETURN 'NO';
    when INVALID_LICENSE_NUMBER then
        dbms_output.put_line('Invalid License Number !!!');
        RETURN 'NO';
    when INVALID_PASSPORT_NUMBER then
        dbms_output.put_line('Invalid Passport Number !!!');
        RETURN 'NO';
    when INVALID_CUSTOMER_TYPE then
        dbms_output.put_line('Invalid Customer Type !!!');
        RETURN 'NO';
    when INVALID_DATE_OF_BIRTH then
        dbms_output.put_line('Invalid Date of Birth OR Age Less Than 18 !!!');
        RETURN 'NO';

    RETURN 'NO';
END PROCESS_CUSTOMER;

/
